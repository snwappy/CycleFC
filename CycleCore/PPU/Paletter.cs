/*********************************************************************\r
*This file is part of CycleFC                                         *               
*                                                                     *
*Original code © Ala Hadid 2009 - 2011                                *
*Code maintainance by Snappy Pupper (@snappypupper on Twitter)        *
*Code updated: October 2023                                           *
*                                                                     *                                                                     *
*CycleFC is a fork of the original MyNES,                             *
*which is free software: you can redistribute it and/or modify        *
*it under the terms of the GNU General Public License as published by *
*the Free Software Foundation, either version 3 of the License, or    *
*(at your option) any later version.                                  *
*                                                                     *
*You should have received a copy of the GNU General Public License    *
*along with this program.  If not, see <http://www.gnu.org/licenses/>.*
\*********************************************************************/
using System.IO;

namespace CycleCore.Nes
{
    public class NesPalette
    {
        public static int[] PALPalette =
{
0x808080, 0x3DA6, 0x12B0, 0x440096, 0xA1005E, 0xC70028, 0xBA0600, 0x8C1700, 0x5C2F00, 0x104500, 0x54A00, 0x472E, 0x4166, 0x0, 0x50505, 0x50505, 
0xC7C7C7, 0x77FF, 0x2155FF, 0x8237FA, 0xEB2FB5, 0xFF2950, 0xFF2200, 0xD63200, 0xC46200, 0x358000, 0x58F00, 0x8A55, 0x99CC, 0x212121, 0x90909, 0x90909, 
0xFFFFFF, 0xFD7FF, 0x69A2FF, 0xD480FF, 0xFF45F3, 0xFF618B, 0xFF8833, 0xFF9C12, 0xFABC20, 0x9FE30E, 0x2BF035, 0xCF0A4, 0x5FBFF, 0x5E5E5E, 0xD0D0D, 0xD0D0D, 
0xFFFFFF, 0xA6FCFF, 0xB3ECFF, 0xDAABEB, 0xFFA8F9, 0xFFABB3, 0xFFD2B0, 0xFFEFA6, 0xFFF79C, 0xD7E895, 0xA6EDAF, 0xA2F2DA, 0x99FFFC, 0xDDDDDD, 0x111111, 0x111111, 
0x806667, 0x3086, 0xE8E, 0x440079, 0xA1004C, 0xC70020, 0xBA0400, 0x8C1200, 0x5C2500, 0x103700, 0x53B00, 0x3825, 0x3452, 0x0, 0x50404, 0x50404, 
0xC79FA1, 0x5FCE, 0x2144CE, 0x822CCA, 0xEB2592, 0xFF2040, 0xFF1B00, 0xD62800, 0xC44E00, 0x356600, 0x57200, 0x6E44, 0x7AA5, 0x211A1A, 0x90707, 0x90707, 
0xFFCCCE, 0xFACCE, 0x6981CE, 0xD466CE, 0xFF37C4, 0xFF4D70, 0xFF6C29, 0xFF7C0E, 0xFA9619, 0x9FB50B, 0x2BC02A, 0xCC084, 0x5C8CE, 0x5E4B4C, 0xD0A0A, 0xD0A0A, 
0xFFCCCE, 0xA6C9CE, 0xB3BCCE, 0xDA88BE, 0xFF86C9, 0xFF8890, 0xFFA88E, 0xFFBF86, 0xFFC57E, 0xD7B978, 0xA6BD8D, 0xA2C1B0, 0x99CCCC, 0xDDB0B3, 0x110D0D, 0x110D0D, 

0x637854, 0x396D, 0x1074, 0x350063, 0x7D003E, 0x9B001A, 0x910500, 0x6D1500, 0x472C00, 0xC4000, 0x34500, 0x421E, 0x3D43, 0x0, 0x30403, 0x30403, 
0x9BBB83, 0x6FA8, 0x194FA8, 0x6533A5, 0xB72C77, 0xC62634, 0xC61F00, 0xA62F00, 0x985C00, 0x297800, 0x38600, 0x8138, 0x8F86, 0x191F15, 0x70805, 0x70805, 
0xC6EFA8, 0xBCAA8, 0x5198A8, 0xA578A8, 0xC640A0, 0xC65B5B, 0xC67F21, 0xC6920B, 0xC3B015, 0x7CD509, 0x21E122, 0x9E16C, 0x3EBA8, 0x49583E, 0xA0C08, 0xA0C08, 
0xC6EFA8, 0x81ECA8, 0x8BDDA8, 0xAAA09B, 0xC69DA4, 0xC6A076, 0xC6C574, 0xC6E06D, 0xC6E866, 0xA7DA62, 0x81DE73, 0x7EE38F, 0x77EFA6, 0xACCF91, 0xD0F0B, 0xD0F0B, 
0x656250, 0x2E68, 0xD6E, 0x35005E, 0x7F003B, 0x9D0019, 0x920400, 0x6E1100, 0x482400, 0xC3500, 0x33800, 0x361C, 0x3240, 0x0, 0x30303, 0x30303, 
0x9D997D, 0x5BA0, 0x1A41A0, 0x662A9D, 0xB92472, 0xC91F32, 0xC91A00, 0xA92600, 0x9A4B00, 0x296200, 0x36E00, 0x6A35, 0x7580, 0x1A1914, 0x70605, 0x70605, 
0xC9C4A0, 0xBA5A0, 0x527CA0, 0xA762A0, 0xC93599, 0xC94A57, 0xC96820, 0xC9780B, 0xC59014, 0x7DAE08, 0x21B821, 0x9B867, 0x3C1A0, 0x4A483B, 0xA0A08, 0xA0A08, 
0xC9C4A0, 0x83C2A0, 0x8DB5A0, 0xAC8394, 0xC9819C, 0xC98370, 0xC9A16E, 0xC9B868, 0xC9BE62, 0xA9B25D, 0x83B66E, 0x7FBA89, 0x78C49E, 0xAEAA8B, 0xD0D0A, 0xD0D0A, 

0x686A8F, 0x32B9, 0xEC5, 0x3700A8, 0x840069, 0xA3002C, 0x980400, 0x721300, 0x4B2700, 0xD3900, 0x43D00, 0x3A33, 0x3572, 0x0, 0x40405, 0x40405, 
0xA3A5DE, 0x62FF, 0x1B46FF, 0x6A2DFF, 0xC027CA, 0xD12259, 0xD11C00, 0xAF2900, 0xA05100, 0x2B6A00, 0x47600, 0x725F, 0x7EE4, 0x1B1B24, 0x7070A, 0x7070A, 
0xD1D3FF, 0xCB2FF, 0x5686FF, 0xAD6AFF, 0xD139FF, 0xD1509B, 0xD17039, 0xD18114, 0xCD9C23, 0x82BC0F, 0x23C73B, 0x9C7B7, 0x4D0FF, 0x4D4E69, 0xA0A0E, 0xA0A0E, 
0xD1D3FF, 0x88D1FF, 0x92C3FF, 0xB28DFF, 0xD18BFF, 0xD18DC8, 0xD1AEC5, 0xD1C6B9, 0xD1CDAE, 0xB0C0A6, 0x88C4C4, 0x84C8F4, 0x7DD3FF, 0xB5B7F7, 0xD0E13, 0xD0E13, 
0x675A6F, 0x2B90, 0xC99, 0x370082, 0x820051, 0xA10022, 0x960400, 0x711000, 0x4A2100, 0xC3000, 0x43400, 0x3228, 0x2E58, 0x0, 0x40304, 0x40304, 
0xA18DAD, 0x54DD, 0x1A3CDD, 0x6927D9, 0xBE219D, 0xCE1D45, 0xCE1800, 0xAD2300, 0x9E4500, 0x2A5A00, 0x46500, 0x6149, 0x6CB1, 0x1A171C, 0x70607, 0x70607, 
0xCEB5DD, 0xC98DD, 0x5573DD, 0xAB5ADD, 0xCE30D3, 0xCE4478, 0xCE602C, 0xCE6E0F, 0xCA851B, 0x80A10C, 0x22AA2E, 0x9AA8E, 0x4B2DD, 0x4C4251, 0xA090B, 0xA090B, 
0xCEB5DD, 0x86B2DD, 0x90A7DD, 0xB079CC, 0xCE77D8, 0xCE799B, 0xCE9599, 0xCEA990, 0xCEAF87, 0xAEA481, 0x86A898, 0x83ABBD, 0x7BB5DB, 0xB39CC0, 0xD0C0E, 0xD0C0E, 

0x576565, 0x3083, 0xE8B, 0x2E0076, 0x6D004A, 0x87001F, 0x7E0400, 0x5F1200, 0x3E2500, 0xA3600, 0x33A00, 0x3824, 0x3350, 0x0, 0x30303, 0x30303, 
0x879D9D, 0x5EC9, 0x1643C9, 0x582BC5, 0x9F258E, 0xAD203F, 0xAD1A00, 0x912700, 0x854D00, 0x246500, 0x37000, 0x6D43, 0x78A1, 0x161A1A, 0x60707, 0x60707, 
0xADC9C9, 0xAA9C9, 0x477FC9, 0x9065C9, 0xAD36BF, 0xAD4C6D, 0xAD6B28, 0xAD7B0E, 0xAA9419, 0x6CB30B, 0x1DBD29, 0x8BD81, 0x3C6C9, 0x3F4A4A, 0x80A0A, 0x80A0A, 
0xADC9C9, 0x70C7C9, 0x79BAC9, 0x9487B9, 0xAD84C4, 0xAD878D, 0xADA58B, 0xADBC83, 0xADC37B, 0x92B775, 0x70BB8A, 0x6EBFAC, 0x68C9C7, 0x96AEAE, 0xB0D0D, 0xB0D0D, 
0x595959, 0x2A74, 0xC7B, 0x2F0069, 0x700041, 0x8B001C, 0x820400, 0x621000, 0x402000, 0xB3000, 0x33300, 0x3120, 0x2D47, 0x0, 0x30303, 0x30303, 
0x8B8B8B, 0x53B2, 0x173BB2, 0x5B26AF, 0xA4207E, 0xB21C38, 0xB21700, 0x952300, 0x894400, 0x255900, 0x36400, 0x603B, 0x6B8E, 0x171717, 0x60606, 0x60606, 
0xB2B2B2, 0xA96B2, 0x4971B2, 0x9459B2, 0xB230AA, 0xB24361, 0xB25F23, 0xB26D0C, 0xAF8316, 0x6F9E09, 0x1EA825, 0x8A872, 0x3AFB2, 0x414141, 0x90909, 0x90909, 
0xB2B2B2, 0x74B0B2, 0x7DA5B2, 0x9877A4, 0xB275AE, 0xB2777D, 0xB2937B, 0xB2A774, 0xB2AC6D, 0x96A268, 0x74A57A, 0x71A998, 0x6BB2B0, 0x9A9A9A, 0xB0B0B, 0xB0B0B, 
};

        
     public static int[] NTSCPalette =/*Should be generated using the generator.*/
{
};

        public static int[] LoadPalette(Stream STR)
        {
            try
            {
                if (STR.Length == 192)
                {
                    int[] Nes_Palette = new int[64];
                    byte[] buffer = new byte[192];
                    STR.Read(buffer, 0, 192);
                    int j = 0;
                    for (int i = 0; i < 64; i++)
                    {
                        byte RedValue = buffer[j]; j++;
                        byte GreenValue = buffer[j]; j++;
                        byte BlueValue = buffer[j]; j++;
                        Nes_Palette[i] = (0xFF << 24) | (RedValue << 16) |
                            (GreenValue << 8) | BlueValue;
                    }
                    STR.Close();
                    return Nes_Palette;
                }
                else
                {
                    int[] Nes_Palette = new int[512];
                    byte[] buffer = new byte[512 * 3];
                    STR.Read(buffer, 0, 512 * 3);
                    int j = 0;
                    for (int i = 0; i < 512; i++)
                    {
                        byte RedValue = buffer[j]; j++;
                        byte GreenValue = buffer[j]; j++;
                        byte BlueValue = buffer[j]; j++;
                        Nes_Palette[i] = (0xFF << 24) | (RedValue << 16) |
                            (GreenValue << 8) | BlueValue;
                    }
                    STR.Close();
                    return Nes_Palette;
                }
            }
            catch { STR.Close(); }
            return null;
        }
    }
}